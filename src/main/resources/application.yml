spring:
  # 데이터베이스 설정
  datasource:
    url: jdbc:h2:mem:testdb  # 개발용 H2 인메모리 DB
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  # JPA/Hibernate 설정
  jpa:
    hibernate:
      ddl-auto: create-drop  # 개발용 (운영시 validate로 변경)
    show-sql: true
    format-sql: true
        
  # H2 Console 활성화 (개발용)
  h2:
    console:
      enabled: true
      path: /h2-console
      
  # Thymeleaf 설정
  thymeleaf:
    cache: false  # 개발용 (운영시 true로 변경)
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    encoding: UTF-8
    check-template: true
    check-template-location: true
    
  # DevTools 설정 (Hot Reload)
  devtools:
    restart:
      enabled: true
      additional-paths: src/main/resources/templates,src/main/resources/static
      exclude: WEB-INF/**
      poll-interval: 1000
      quiet-period: 400
    livereload:
      enabled: true
      port: 35729
    add-properties: false
    
  # Security 설정 (로그인 기능 비활성화)

# 서버 설정
server:
  port: ${PORT:8080}
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

# 애플리케이션 설정
app:
  url: https://bulletin-production.up.railway.app  # Railway 배포 환경 URL

# 파일 업로드 설정
file:
  upload:
    bulletin-dir: uploads/bulletin-images/

# Cloudinary 설정
cloudinary:
  cloud-name: ${CLOUDINARY_CLOUD_NAME:dxmkhavyb}
  api-key: ${CLOUDINARY_API_KEY:149669458686891}
  api-secret: ${CLOUDINARY_API_SECRET:z94Qqz3591tHOAcuiXfmzs555_U}

# 로깅 설정
logging:
  level:
    com.church.bulletin: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE



---
# Railway 환경 설정
spring:
  config:
    activate:
      on-profile: railway
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/bulletin}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 5
      minimum-idle: 2
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
  thymeleaf:
    cache: true
  h2:
    console:
      enabled: false

server:
  port: ${PORT:8080}
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

# Railway 배포 환경에서 실제 도메인 사용
app:
  url: ${APP_URL:https://bulletin-production.up.railway.app}

logging:
  level:
    com.church.bulletin: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
