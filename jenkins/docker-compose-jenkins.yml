version: '3.8'

services:
  # Jenkins 마스터
  jenkins:
    image: jenkins/jenkins:lts-jdk17
    container_name: jenkins-master
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      # Jenkins 데이터 영구 저장
      - jenkins_home:/var/jenkins_home
      # Docker 소켓 마운트 (Docker-in-Docker)
      - /var/run/docker.sock:/var/run/docker.sock
      # 로컬 프로젝트 마운트 (개발용)
      - ../:/workspace/bulletin
    environment:
      - JENKINS_OPTS="--httpPort=8080"
      - JAVA_OPTS="-Xmx1024m"
      - DOCKER_HOST=unix:///var/run/docker.sock
    networks:
      - jenkins-network
    user: root  # Docker 접근을 위해 root 권한 필요
    privileged: true  # Docker 명령어 실행을 위한 특권 모드

  # Jenkins Agent (선택사항 - 추가 빌드 노드)
  jenkins-agent:
    image: jenkins/inbound-agent:latest
    container_name: jenkins-agent-1
    restart: unless-stopped
    environment:
      - JENKINS_URL=http://jenkins:8080
      - JENKINS_SECRET=${JENKINS_AGENT_SECRET:-}
      - JENKINS_AGENT_NAME=agent-1
      - JENKINS_AGENT_WORKDIR=/home/jenkins/agent
    volumes:
      - jenkins_agent_workdir:/home/jenkins/agent
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker:ro
    networks:
      - jenkins-network
    depends_on:
      - jenkins
    profiles:
      - with-agent  # 필요시에만 실행

  # 개발용 MySQL (선택사항)
  mysql:
    image: mysql:8.0
    container_name: jenkins-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: jenkins_root_2024
      MYSQL_DATABASE: youth_bulletin
      MYSQL_USER: bulletin_user
      MYSQL_PASSWORD: bulletin_pass_2024
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ../database_schema.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - jenkins-network
    profiles:
      - with-db  # 필요시에만 실행

volumes:
  jenkins_home:
    driver: local
  jenkins_agent_workdir:
    driver: local
  mysql_data:
    driver: local

networks:
  jenkins-network:
    driver: bridge
